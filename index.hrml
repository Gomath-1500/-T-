<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="UTF-8">
<title>고수학 리포트 생성기</title>
<style>
body { font-family:sans-serif; padding:20px; }
textarea { width:100%; height:150px; margin-bottom:10px; }
input { width:100%; padding:6px; margin-bottom:10px; }
.report { margin-top:20px; padding:12px; border:1px solid #ccc; border-radius:8px; white-space:pre-line; background:#f9f9f9; }
.report:focus { outline:2px solid #4CAF50; }
.copy-btn, .all-copy-btn { margin-top:5px; cursor:pointer; padding:6px 12px; border:none; border-radius:6px; }
.copy-btn { background:#4CAF50; color:white; margin-right:10px; }
.all-copy-btn { background:#2196F3; color:white; margin-top:20px; }
</style>
</head>
<body>
<h2>📋 고수학 데일리 리포트 생성기</h2>

<p>반명, 진도, 과제, 테스트 범위, 학생 정보를 한꺼번에 입력하세요.</p>
<textarea id="inputData" placeholder="예)\n반명: 중3T(수용)\n진도: 고등대수 등차수열~수열의 합과 일반항의 관계\n과제: 등차수열 A단계 및 지수.로그함수 오답 정리\n테스트 범위: 등차수열 진도 몰입수업으로 대체\n학생: 이종찬 80 65 지각10분 과제미흡, 김유겸 결석"></textarea>

<p>담임선생님 이름:</p>
<input id="teacherName" placeholder="예) 박용" />

<p>추가 요구조건:</p>
<textarea id="extraRequest" placeholder="예) 리뷰는 반말로 작성해줘, 인사말에 특정 멘트 추가 등"></textarea>

<br>
<button onclick="generateReports()">리포트 생성</button>

<div id="reports"></div>
<button class="all-copy-btn" onclick="copyAllReports()">📋 반 전체 리포트 복사하기</button>

<script>
async function fetchReport(dataObj){
  try {
    const res = await fetch('https://gomath-daily-report.onrender.com/generate', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(dataObj)
    });
    const data = await res.json();
    return data.report;
  } catch(e){
    console.error(e);
    return `⚠️ GPT 서버 연결 오류: 수업리뷰를 가져오지 못했습니다.`;
  }
}

async function generateReports() {
  const input = document.getElementById('inputData').value;
  const extraRequest = document.getElementById('extraRequest').value;
  const teacherName = document.getElementById('teacherName').value;
  const lines = input.split('\n').map(l => l.trim()).filter(l => l);

  let className = '', progress = '', homework = '', testRange = '';
  let studentsRaw = [];

  lines.forEach(line => {
    if (line.startsWith('반명')) className = line.split(':')[1].trim();
    else if (line.startsWith('진도')) progress = line.split(':')[1].trim();
    else if (line.startsWith('과제')) homework = line.split(':')[1].trim();
    else if (line.startsWith('테스트 범위') || line.startsWith('테스트')) testRange = line.split(':')[1].trim();
    else if (line.startsWith('학생')) {
      const studentStr = line.split(':')[1].trim();
      studentsRaw = studentStr.split(/[,]/).map(s => s.trim());
    }
  });

  const reportsContainer = document.getElementById('reports');
  reportsContainer.innerHTML = '';

  for (let idx = 0; idx < studentsRaw.length; idx++) {
    const raw = studentsRaw[idx];
    const parts = raw.split(' ').filter(p => p.trim());
    const name = parts[0];

    let dailyScore = '';
    let weakScore = '';
    let attendance = '정상';
    let attitude = '우수';
    let homeworkStatus = '정상';

    for (let i = 1; i < parts.length; i++) {
      const token = parts[i];
      if (/^\d+$/.test(token)) {
        if (dailyScore === '') dailyScore = token;
        else weakScore = token;
      } else if (token.includes('결석')) {
        attendance = '결석';
      } else if (token.includes('지각')) {
        attendance = token;
      } else if (token.includes('과제') && token.includes('미흡')) {
        homeworkStatus = '미흡';
      } else if (token.includes('소극') || token.includes('피곤')) {
        attitude = '보통';
      }
    }

    let testLabel = '데일리 테스트';
    if (testRange.includes('월말')) testLabel = '월말 테스트';
    else if (testRange.includes('주간')) testLabel = '주간 테스트';
    else if (testRange.includes('진단')) testLabel = '진단 테스트';
    else if (testRange.trim() !== '') testLabel = testRange; // 다른 범위 입력시 그대로

    const fullReport = await fetchReport({
      name,
      className,
      progress,
      homework,
      testRange: testLabel,
      score: dailyScore,
      weakScore,
      extraRequest,
      teacherName,
      attendance,
      attitude,
      homeworkStatus
    });

    const div = document.createElement('div');
    div.className = 'report';
    div.contentEditable = true;
    div.textContent = fullReport;

    const btn = document.createElement('button');
    btn.className = 'copy-btn';
    btn.textContent = '📋 복사';
    btn.onclick = () => {
      navigator.clipboard.writeText(div.textContent).then(() => {
        alert(name + ' 학생 리포트가 복사되었습니다.');
      });
    };

    reportsContainer.appendChild(div);
    reportsContainer.appendChild(btn);
  }
}

function copyAllReports() {
  const reportDivs = document.querySelectorAll('.report');
  let allText = '';
  reportDivs.forEach(div => { allText += div.textContent + '\n\n'; });
  navigator.clipboard.writeText(allText).then(() => {
    alert('반 전체 리포트가 복사되었습니다.');
  });
}
</script>
</body>
</html>
